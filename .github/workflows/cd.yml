name: CD
on:
  push:
    branches:
      - main
      - feat-deployment
      - feat-k8s

jobs:
  duplicate_guard:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: self-hosted
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: "never"
          skip_after_successful_duplicate: "true"
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  # test:
  #   needs: duplicate_guard
  #   if: ${{ needs.duplicate_guard.outputs.should_skip != 'true' }}
  #   runs-on: self-hosted
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Run tests
  #       run: |
  #         echo -e "$SECRETS_BASE64_ENCODED" | base64 -d | sudo tee ./backend/secrets.json > /dev/null
  #         docker-compose build && docker-compose up -d && sleep 120s && cd ./backend/scripts && ./run-test.sh ; docker-compose down
  #       env:
  #         SECRETS_BASE64_ENCODED: ${{ secrets.SECRETS_BASE64_ENCODED }}
  docker-build:
    # needs: test
    needs: duplicate_guard
    if: ${{ needs.duplicate_guard.outputs.should_skip != 'true' }}
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: a891/deepmush_backend:latest
      - name: backend Image digest
        run: echo ${{ steps.docker_build_backend.outputs.digest }}

      - name: Build and push filebeat
        id: docker_build_filebeat
        uses: docker/build-push-action@v2
        with:
          context: ./filebeat
          push: true
          tags: a891/deepmush_filebeat:latest
      - name: postgres Image digest
        run: echo ${{ steps.docker_build_everytime.outputs.digest }}

      - name: Config kubectl & Trigger deployments & Do rolling update for existing deployments
        run: |
            echo -e "$CONFIG_YAML_BASE64" | base64 -d - | tee ~/k3s.yaml
            export KUBECONFIG=$HOME/k3s.yaml:$KUBECONFIG
            echo -e "$ENV_CONFIG_BASE64" | base64 -d - > ./k8s/production-env-env-configmap.yaml
            kubectl config use-context tpu-k8s
            ./up-pods.sh
            ./rolling-release.sh
        env:
          CONFIG_YAML_BASE64: ${{ secrets.CONFIG_YAML_BASE64 }}
          ENV_CONFIG_BASE64: ${{ secrets.ENV_CONFIG_BASE64 }}
