apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus-tier
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/prometheus-tier: "true"
  podSelector:
    matchLabels:
      io.kompose.network/prometheus-tier: "true"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    io.kompose.service: prometheus
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        io.kompose.network/db-tier: "true"
        io.kompose.network/mq-tier: "true"
        io.kompose.network/prometheus-tier: "true"
        io.kompose.service: prometheus
    spec:
      containers:
        - image: prom/prometheus
          name: prometheus
          ports:
            - containerPort: 9090
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /etc/prometheus/
              name: prometheus-etc
            - mountPath: /prometheus
              name: prometheus-dir
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      dnsConfig:
        nameservers:
          - 8.8.8.8
      volumes:
        - name: prometheus-etc
          secret:
            secretName: prometheus-etc
        - name: prometheus-dir
          persistentVolumeClaim:
            claimName: prometheus-dir-claim
status: {}