apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/prometheus-tier: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
              value: grafana-clock-panel,grafana-simple-json-datasource
          image: grafana/grafana
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /etc/grafana
              name: grafana-etc
            - mountPath: /var/lib/grafana
              name: grafana-lib
            - mountPath: /etc/grafana/provisioning
              name: grafana-provisioning
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      dnsConfig:
        nameservers:
          - 8.8.8.8
      volumes:
        - name: grafana-etc
          secret:
            secretName: grafana-etc
        - name: grafana-lib
          persistentVolumeClaim:
            claimName: grafana-lib-claim
        - name: grafana-provisioning
          persistentVolumeClaim:
            claimName: grafana-provisioning-claim
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
status:
  loadBalancer: {}
