apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: node-exporter
  name: node-exporter
spec:
  ports:
    - name: "9100"
      port: 9100
      targetPort: 9100
  selector:
    io.kompose.service: node-exporter
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    io.kompose.service: node-exporter
  name: node-exporter
spec:
  selector:
    matchLabels:
      name: node-exporter
  template:
    metadata:
      labels:
        name: node-exporter
        io.kompose.network/prometheus-tier: "true"
        io.kompose.service: node-exporter
    spec:
      containers:
        - args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($|/)
          image: prom/node-exporter
          name: node-exporter
          ports:
            - containerPort: 9100
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /host/proc
              name: node-exporter-claim0
              readOnly: true
            - mountPath: /host/sys
              name: node-exporter-claim1
              readOnly: true
            - mountPath: /rootfs
              name: node-exporter-claim2
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: node-exporter-claim0
          persistentVolumeClaim:
            claimName: node-exporter-claim0
            readOnly: true
        - name: node-exporter-claim1
          persistentVolumeClaim:
            claimName: node-exporter-claim1
            readOnly: true
        - name: node-exporter-claim2
          persistentVolumeClaim:
            claimName: node-exporter-claim2
            readOnly: true
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
