apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pgadmin
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/db-tier: "true"
        io.kompose.service: pgadmin
    spec:
      containers:
        - env:
            - name: ELASTIC_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ELASTIC_PASSWORD
                  name: production-env-env
            - name: ELASTIC_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: ELASTIC_USERNAME
                  name: production-env-env
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_BASICAUTH_PASSWORD
                  name: production-env-env
            - name: ME_CONFIG_BASICAUTH_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_BASICAUTH_USERNAME
                  name: production-env-env
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_ADMINPASSWORD
                  name: production-env-env
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_ADMINUSERNAME
                  name: production-env-env
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  key: ME_CONFIG_MONGODB_SERVER
                  name: production-env-env
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_DATABASE
                  name: production-env-env
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: production-env-env
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: production-env-env
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: PGADMIN_DEFAULT_EMAIL
                  name: production-env-env
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGADMIN_DEFAULT_PASSWORD
                  name: production-env-env
            - name: PGADMIN_LISTEN_PORT
              value: "80"
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: production-env-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: production-env-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: production-env-env
          image: dpage/pgadmin4
          name: pgadmin
          ports:
            - containerPort: 80
          resources: {}
          tty: true
      restartPolicy: Always
status: {}
